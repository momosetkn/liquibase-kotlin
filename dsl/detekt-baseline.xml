<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>EmptyFunctionBlock:ChangeSetDsl.kt$ChangeSetDsl${ }</ID>
    <ID>ForbiddenComment:ChangeLogDsl.kt$ChangeLogDsl$// TODO: confirm</ID>
    <ID>ForbiddenComment:ChangeLogDsl.kt$ChangeLogDsl$// TODO: set by user</ID>
    <ID>ForbiddenComment:ChangeSetDsl.kt$ChangeSetDsl$// TODO: create KotlinCustomChangeWrapper</ID>
    <ID>ForbiddenComment:ColumnDsl.kt$// TODO: It might be better to divide the class itself into three.?</ID>
    <ID>ForbiddenComment:PreConditionDsl.kt$PreConditionDsl$// TODO: add other precondition</ID>
    <ID>FunctionParameterNaming:ChangeSetDsl.kt$ChangeSetDsl$`class`: String? = null</ID>
    <ID>FunctionParameterNaming:PreConditionDsl.kt$PreConditionDsl$`class`: String? = null</ID>
    <ID>LargeClass:ChangeSetDsl.kt$ChangeSetDsl</ID>
    <ID>LongMethod:ColumnDsl.kt$IColumnDsl$fun column( name: String, type: String? = null, value: String? = null, afterColumn: String? = null, autoIncrement: Boolean? = null, beforeColumn: String? = null, computed: Boolean? = null, defaultValue: String? = null, defaultValueBoolean: Boolean? = null, defaultValueComputed: String? = null, defaultValueConstraintName: String? = null, defaultValueDate: String? = null, defaultValueNumeric: Number? = null, descending: Boolean? = false, encoding: String? = null, generationType: String? = null, incrementBy: Long? = null, position: Int? = null, remarks: String? = null, startWith: Long? = null, valueBlobFile: String? = null, // maybe for update or delete valueBoolean: Boolean? = null, valueClobFile: String? = null, valueComputed: String? = null, valueDate: String? = null, valueNumeric: Number? = null, block: (ConstraintDsl.() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:ChangeLogDsl.kt$ChangeLogDsl$( author: String, id: String, contextFilter: String? = null, // same to context context: String? = null, created: String? = null, dbms: String? = null, failOnError: Boolean? = null, ignore: Boolean? = null, labels: String? = null, logicalFilePath: String? = null, objectQuotingStrategy: String? = null, onValidationFail: String? = null, runAlways: Boolean? = null, runInTransaction: Boolean? = null, runOnChange: Boolean? = null, runOrder: String? = null, runWith: String? = null, runWithSpoolFile: String? = null, block: ChangeSetDsl.() -&gt; Unit, )</ID>
    <ID>LongParameterList:ChangeLogDsl.kt$ChangeLogDsl$( file: String, contextFilter: String? = null, context: String? = null, // same to contextFilter errorIfMissing: Boolean? = null, ignore: Boolean? = null, labels: String? = null, relativeToChangelogFile: Boolean? = null, )</ID>
    <ID>LongParameterList:ChangeLogDsl.kt$ChangeLogDsl$( name: String, value: String, file: String? = null, relativeToChangelogFile: Boolean? = null, context: String? = null, contextFilter: String? = null, labels: String? = null, // todo: nothing document dbms: String? = null, global: Boolean? = true, )</ID>
    <ID>LongParameterList:ChangeLogDsl.kt$ChangeLogDsl$( onError: String? = null, onErrorMessage: String? = null, onFail: String? = null, onFailMessage: String? = null, onSqlOutput: String? = null, block: RootPreConditionDsl.() -&gt; Unit, )</ID>
    <ID>LongParameterList:ChangeLogDsl.kt$ChangeLogDsl$( path: String, contextFilter: String? = null, context: String? = null, // same to contextFilter endsWithFilter: String? = null, errorIfMissingOrEmpty: Boolean? = null, filter: String? = null, ignore: Boolean? = null, labels: String? = null, maxDepth: Int? = null, minDepth: Int? = null, relativeToChangelogFile: Boolean? = null, resourceComparator: String? = null, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( associatedWith: String? = null, catalogName: String? = null, clustered: Boolean? = null, indexName: String? = null, schemaName: String? = null, tableName: String, tablespace: String? = null, unique: Boolean? = null, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( baseColumnNames: String, baseTableCatalogName: String? = null, baseTableName: String, baseTableSchemaName: String? = null, constraintName: String, deferrable: Boolean? = null, initiallyDeferred: Boolean? = null, onDelete: String? = null, onUpdate: String? = null, referencedColumnNames: String, referencedTableCatalogName: String? = null, referencedTableName: String, referencedTableSchemaName: String? = null, validate: Boolean? = null, referencesUniqueColumn: Boolean? = null, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( cacheSize: Long? = null, catalogName: String? = null, cycle: Boolean? = null, dataType: String? = null, incrementBy: Long? = null, maxValue: Long? = null, minValue: Long? = null, ordered: Boolean? = null, schemaName: String? = null, sequenceName: String, startValue: Long? = null, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( cacheSize: String? = null, catalogName: String? = null, cycle: Boolean? = null, dataType: String? = null, incrementBy: Long? = null, maxValue: String? = null, minValue: String? = null, ordered: Boolean? = null, schemaName: String? = null, sequenceName: String, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, clustered: Boolean? = null, columnNames: String, constraintName: String? = null, deferrable: Boolean? = null, disabled: Boolean? = null, forIndexCatalogName: String? = null, forIndexName: String? = null, forIndexSchemaName: String? = null, initiallyDeferred: Boolean? = null, schemaName: String? = null, tableName: String, tablespace: String? = null, validate: Boolean? = null, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, clustered: Boolean? = null, columnNames: String, constraintName: String? = null, forIndexCatalogName: String? = null, forIndexName: String? = null, forIndexSchemaName: String? = null, schemaName: String? = null, tableName: String, tablespace: String? = null, validate: Boolean? = null, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, column1Name: String, column2Name: String, finalColumnName: String, finalColumnType: String, joinString: String? = null, schemaName: String? = null, tableName: String, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, columnDataType: String? = null, columnName: String, constraintName: String? = null, defaultNullValue: String? = null, schemaName: String? = null, tableName: String, validate: Boolean? = null, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, columnDataType: String? = null, columnName: String, constraintName: String? = null, schemaName: String? = null, tableName: String, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, columnDataType: String? = null, columnName: String, defaultOnNull: Boolean? = null, generationType: String? = null, incrementBy: Long? = null, schemaName: String? = null, startWith: Long? = null, tableName: String, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, columnDataType: String? = null, columnName: String, defaultValue: String? = null, defaultValueBoolean: Boolean? = null, defaultValueComputed: String? = null, defaultValueConstraintName: String? = null, defaultValueDate: String? = null, defaultValueNumeric: String? = null, defaultValueSequenceNext: String? = null, schemaName: String? = null, tableName: String, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, columnDataType: String? = null, newColumnName: String, oldColumnName: String, remarks: String? = null, schemaName: String? = null, tableName: String, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, columnName: String, remarks: String, schemaName: String? = null, tableName: String, columnDataType: String? = null, columnParentType: String? = null, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, commentLineStartsWith: String? = null, encoding: String? = null, file: String, onlyUpdate: Boolean? = null, primaryKey: String, quotchar: String? = null, relativeToChangelogFile: Boolean? = null, schemaName: String? = null, separator: String? = null, tableName: String, usePreparedStatements: Boolean? = null, block: LoadDataColumnDsl.() -&gt; Unit, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, commentLineStartsWith: String? = null, encoding: String? = null, file: String, quotchar: String? = null, relativeToChangelogFile: Boolean? = null, schemaName: String? = null, separator: String? = null, tableName: String, usePreparedStatements: Boolean? = null, block: LoadDataColumnDsl.() -&gt; Unit, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, dbms: String? = null, encoding: String? = null, path: String, procedureName: String? = null, relativeToChangelogFile: Boolean? = null, replaceIfExists: Boolean? = null, schemaName: String? = null, procedureText: () -&gt; String, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, encoding: String? = null, fullDefinition: Boolean? = null, path: String? = null, relativeToChangelogFile: Boolean? = null, remarks: String? = null, replaceIfExists: Boolean? = null, schemaName: String? = null, viewName: String, selectQuery: () -&gt; String, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( catalogName: String? = null, ifNotExists: Boolean? = null, remarks: String? = null, schemaName: String? = null, tableName: String, tablespace: String? = null, block: ColumnDsl.() -&gt; Unit, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( constraintName: String? = null, existingColumnName: String, existingTableCatalogName: String? = null, existingTableName: String, existingTableSchemaName: String? = null, newColumnDataType: String? = null, newColumnName: String, newTableCatalogName: String? = null, newTableName: String, newTableSchemaName: String? = null, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( dbms: String? = null, encoding: String? = null, endDelimiter: String? = null, path: String, relativeToChangelogFile: Boolean? = null, splitStatements: Boolean? = null, stripComments: Boolean? = null, )</ID>
    <ID>LongParameterList:ChangeSetDsl.kt$ChangeSetDsl$( onError: String? = null, onErrorMessage: String? = null, onFail: String? = null, onFailMessage: String? = null, onSqlOutput: String? = null, block: RootPreConditionDsl.() -&gt; Unit, )</ID>
    <ID>LongParameterList:ColumnDsl.kt$IColumnDsl$( name: String, type: String? = null, value: String? = null, afterColumn: String? = null, autoIncrement: Boolean? = null, beforeColumn: String? = null, computed: Boolean? = null, defaultValue: String? = null, defaultValueBoolean: Boolean? = null, defaultValueComputed: String? = null, defaultValueConstraintName: String? = null, defaultValueDate: String? = null, defaultValueNumeric: Number? = null, descending: Boolean? = false, encoding: String? = null, generationType: String? = null, incrementBy: Long? = null, position: Int? = null, remarks: String? = null, startWith: Long? = null, valueBlobFile: String? = null, // maybe for update or delete valueBoolean: Boolean? = null, valueClobFile: String? = null, valueComputed: String? = null, valueDate: String? = null, valueNumeric: Number? = null, block: (ConstraintDsl.() -&gt; Unit)? = null, )</ID>
    <ID>LongParameterList:ConstraintDsl.kt$ConstraintDsl$( nullable: Boolean? = null, notNullConstraintName: String? = null, primaryKey: Boolean? = null, primaryKeyName: String? = null, primaryKeyTablespace: String? = null, references: String? = null, referencedTableCatalogName: String? = null, referencedTableSchemaName: String? = null, referencedTableName: String? = null, referencedColumnNames: String? = null, unique: Boolean? = null, uniqueConstraintName: String? = null, checkConstraint: String? = null, deleteCascade: Boolean? = null, foreignKeyName: String? = null, initiallyDeferred: Boolean? = null, deferrable: Boolean? = null, validateNullable: Boolean? = null, validateUnique: Boolean? = null, validatePrimaryKey: Boolean? = null, validateForeignKey: Boolean? = null, )</ID>
    <ID>MatchingDeclarationName:Annotations.kt$ChangeLogDslMarker</ID>
    <ID>MaxLineLength:PreConditionDsl.kt$PreConditionDsl$"ChangeSet '$changeSetId': 'Should specify either 'class' or 'clazz' or 'className' property for 'customPrecondition' preConditions."</ID>
    <ID>SwallowedException:ChangeLogDsl.kt$ChangeLogDsl$e: IllegalArgumentException</ID>
    <ID>TooManyFunctions:ChangeSetDsl.kt$ChangeSetDsl</ID>
    <ID>UnusedParameter:ChangeSetDsl.kt$ChangeSetDsl$defaultValueComputed: String? = null</ID>
    <ID>UnusedParameter:ChangeSetDsl.kt$ChangeSetDsl$defaultValueSequenceNext: String? = null</ID>
    <ID>VariableNaming:ColumnDsl.kt$IColumnDsl$internal val _columns = mutableListOf&lt;ColumnConfig&gt;()</ID>
  </CurrentIssues>
</SmellBaseline>
